// Form Schema Example
formSchema = {
    "form": {
        "id": Constants.CREATE_POST_FORM_ID,
        "action": Laravel.apis.posts.store,
        "method": "POST",
        "class": "skip-validation",
        "data": {
            "category-id": "1" // change this
        },
        "submitHandler": null,
        "extraAttributes": "",
        /*
            if form has a file input,
            then the form enctype="multipart/form-data"
            and has-file class will be added to form
            and data-has-file attribute will be added with value 'true' (data-has-file="true")
        */
        "inputs": [{
            "id": "form-1-input-1",
            "name": "form-1-input-1",
            "type": "text",
            "typeCode": "STRING", // if type not one of ["STRING", "NUMBER", "COLOR", "CHECKBOX"] the "type" will be ignored
            "value": "",
            "class": "",
            "placeholder": "this is input 1",
            "required": true,
            "title": "Please fill me!",
            "inputFormGroupClass": "",
            "inputGroupClass": "",
            "inputPrefix": '<i class="fa fa-plus" aria-hidden="true"></i>',
            "inputSuffix": "",
            "extraAttributes": "",
            "label": {
                "class": "",
                "text": "Input 1 Label"
            },
            // Params will be used with SELECT/MULTI_SELECT type
            "options": [{"id": "option1", "text": "Option 1", "class": "active"}, {"id": "option2", "text": "Option 2", "class": ""}],
            // if select2Options is null/undefined the select tag will not initialized with select2
            "select2Options": {
                "minimumResultsForSearch": Infinity,
                "dir": "rtl",
                "language": "ar"
            },
            // Params will be used with DATE type
            "datePicketOptions": {
                "minDate": new Date(),
                "maxDate": new Date(2018, 1, 1, 0,0,0)
            }
        }]
    }
};